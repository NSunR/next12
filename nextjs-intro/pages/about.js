//5.이게 프레임워크와 라이브러리의 차이점이야.
export default function Potato() {
  return "about us";
}

//6.React.js는 우리가 원할 때 부르고 원할 때 사용하는 라이브러리고,
//프레임워크는 집과 같은데 내가 코드를 적절한 곳에 넣어야해. 그 집을 수정을 못해. 법이야.
//내 코드는 게스트같은 거라고 보면 돼. 컴포넌트를 적절한 곳에 잘 넣으면 모든 게 잘 동작하는거야.
//즉, 우리는 규칙을 따라서 코드가 있어야 할 곳에 잘 둬야 해.
//그래야 프레임워크가 그 코드를 호출 해.
//7.라우팅 설정 등 about, potato component를 보여달라는 등의 어떤 것도 하지 않아도
//next.js는 자동적으로 pages안에 about이라는 페이지를 만들면
//about에 갔을 때 그 component를 보여줘. 자동적으로.
//결국 개발자는 프레임워크라는 집의 게스트고 내 코드(개발자의 코드)를 올바른 위치에 두면
//프레임워크가 코드를 불러서 사용해.
